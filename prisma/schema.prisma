datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  Project  Project[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Project {
  id    String @id @default(cuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  projectAccessToken    ProjectAccessToken[]
  contentBlockBlueprint ContentBlockBlueprint[]

  assets Asset[]
}

model ProjectAccessToken {
  token     String @id @default(uuid())
  projectId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model ContentBlockBlueprint {
  id   String           @id @default(cuid())
  name String
  type ContentBlockType

  schema Json

  tag String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String

  contentBlock ContentBlock[]
}

model ContentBlock {
  id      String @id @default(cuid())
  name    String
  content Json

  tag String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  contentBlockBlueprint   ContentBlockBlueprint @relation(fields: [contentBlockBlueprintId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contentBlockBlueprintId String
}

enum ContentBlockType {
  PAGE
  UI_COMPONENT
  CONFIG
}

model Asset {
  id   String @id @default(cuid())
  name String

  mimeType String
  fileName String

  tag String?

  assetType AssetType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String
}

enum AssetType {
  IMAGE
  VIDEO
  AUDIO
  DOCUMENT
  OTHER
}
