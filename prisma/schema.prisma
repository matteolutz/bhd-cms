datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password             Password?
  Project              Project[]
  ContentBlockCategory ContentBlockCategory[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Project {
  id    String @id @default(cuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  contentBlocks        ContentBlock[]
  ContentBlockCategory ContentBlockCategory[]
}

model ContentBlockCategory {
  id   String @id @default(cuid())
  name String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  ContentBlock ContentBlock[]
}

model ContentBlock {
  id      String           @id @default(cuid())
  type    ContentBlockType
  content Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String

  ContentBlockCategory   ContentBlockCategory? @relation(fields: [contentBlockCategoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  contentBlockCategoryId String?
}

enum ContentBlockType {
  PAGE
  UI_COMPONENT
  CONFIG
}
